name: Build and Deploy Docker Image on Digital Ocean

on:
    push:
        branches:
            - main

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/pool-1' || github.ref == 'refs/heads/crunchyfashion' || github.ref == 'refs/heads/production-oex')
        env:
            CONTAINER_REGISTRY: ${{ github.ref == 'refs/heads/crunchyfashion' && 'cfc-container-registry' || github.ref == 'refs/heads/production-oex' && 'prod-oexcontainer-registry'||  'aicodepro-container'}}
            APP_NAME: ${{ github.ref == 'refs/heads/main' && 'ms-aicodepro-llm' }}
            IMAGE_NAME: registry.digitalocean.com/${{ github.ref == 'refs/heads/crunchyfashion' && 'cfc-container-registry' ||  'aicodepro-container'}}/${{ github.ref == 'refs/heads/main' && 'ms-aicodepro-llm'}}
            DIGITALOCEAN_REGISTRY_TOKEN: ${{ github.ref == 'refs/heads/crunchyfashion' && secrets.CRUNCHYFASHION_DIGITALOCEAN_REGISTRY_TOKEN || secrets.DIGITALOCEAN_REGISTRY_TOKEN }}
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
            NODE_ENV: production
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Login to Docker registry
              run: docker login -u $DIGITALOCEAN_REGISTRY_TOKEN -p $DIGITALOCEAN_REGISTRY_TOKEN  registry.digitalocean.com

            - name: Build Docker image
              run: docker build  --build-arg NPM_TOKEN=$NPM_TOKEN . -t $IMAGE_NAME -f deploy/Dockerfile --build-arg NODE_ENV=$NODE_ENV

            - name: Push Docker image to registry
              run: docker push $IMAGE_NAME
              timeout-minutes: 25
